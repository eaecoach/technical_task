on:
  push
jobs:
  api-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Flask app
        run: |
          nohup python app.py &  # Run Flask app in background (assumes 'app.py' is your Flask app)

      - name: Wait for API to be available
        run: |
          until curl --silent --output /dev/null http://localhost:8080; do
            echo "Waiting for Flask API to be available..."
            sleep 2
          done
          echo "Flask API is now available!"

      - name: Run Pytest
        run: |
          pytest --maxfail=1 --disable-warnings -q  # You can adjust pytest flags as needed

      - name: Upload pytest results as artifacts
        if: failure()  # Only upload if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: test-results.xml  # Specify the path to your pytest result file, if needed

      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key PMAK-6733629189240500013e4d89-f84c7a9b09f51e0ec39f8c327721be258a
      - name: Run API tests
        run: |
          postman collection run "39432503-73d228bf-c4e5-41e8-827e-ce5a3e00676c" --integration-id "171019-${{ github.run_id }}"
          # Lint your API using Postman CLI
          # postman api lint e073ced0-e904-415f-a4dc-00a65337012c --integration-id 171019
